{"version":3,"file":"PairlistConfigView-B_sTTA8v.js","sources":["../../src/types/pairlists.ts","../../src/components/general/CopyableTextfield.vue","../../src/components/ftbot/PairlistConfigParameter.vue","../../src/stores/pairlistConfig.ts","../../src/components/ftbot/PairlistConfigItem.vue","../../src/components/ftbot/PairlistConfigBlacklist.vue","../../src/components/ftbot/PairlistConfigActions.vue","../../src/components/ftbot/PairlistConfigurator.vue"],"sourcesContent":["import type { BackgroundTaskResult } from './backgroundtasks';\r\nimport type { WhitelistResponse } from './blacklist';\r\nimport type { ExchangeSelectPayload } from './types';\r\n\r\nexport interface PairlistsResponse {\r\n  pairlists: Pairlist[];\r\n}\r\n\r\nexport interface PairlistEvalResponse extends BackgroundTaskResult {\r\n  result: WhitelistResponse;\r\n}\r\n\r\nexport interface Pairlist {\r\n  id?: string;\r\n  is_pairlist_generator: boolean;\r\n  name: string;\r\n  description: string;\r\n  showParameters: boolean;\r\n  params: Record<string, PairlistParameter>;\r\n}\r\n\r\nexport interface PairlistConfig {\r\n  name: string;\r\n  blacklist: string[];\r\n  pairlists: Pairlist[];\r\n}\r\n\r\nexport enum PairlistParamType {\r\n  string = 'string',\r\n  number = 'number',\r\n  boolean = 'boolean',\r\n  option = 'option',\r\n  list = 'list',\r\n}\r\n\r\nexport type PairlistParamValue = string | number | boolean | string[];\r\n\r\ninterface PairlistParameterBase {\r\n  description: string;\r\n  help: string;\r\n  type: PairlistParamType;\r\n}\r\n\r\nexport interface StringPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.string;\r\n  value?: string;\r\n  default: string;\r\n}\r\n\r\nexport interface NumberPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.number;\r\n  value?: number;\r\n  default: number;\r\n}\r\n\r\nexport interface BooleanPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.boolean;\r\n  value?: boolean;\r\n  default: boolean;\r\n}\r\n\r\nexport interface OptionPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.option;\r\n  options: string[];\r\n  value?: string;\r\n  default: string;\r\n}\r\n\r\nexport interface ListPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.list;\r\n  value?: string[];\r\n  default: string;\r\n}\r\n\r\nexport type PairlistParameter =\r\n  | StringPairlistParameter\r\n  | NumberPairlistParameter\r\n  | BooleanPairlistParameter\r\n  | OptionPairlistParameter\r\n  | ListPairlistParameter;\r\n\r\nexport interface PairlistPayloadItem {\r\n  method: string;\r\n  [key: string]: string | number | boolean;\r\n}\r\n\r\nexport interface PairlistsPayload extends ExchangeSelectPayload {\r\n  pairlists: PairlistPayloadItem[];\r\n  blacklist: string[];\r\n  stake_currency: string;\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { useClipboard } from '@vueuse/core';\r\n\r\ndefineProps({\r\n  content: { type: [String, Array<string>], required: true },\r\n  isValid: { type: Boolean, default: true },\r\n});\r\n\r\nconst { copy, isSupported, copied } = useClipboard();\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative group copy-container\">\r\n    <div\r\n      class=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 transition-opacity hover:cursor-pointer flex dark:bg-surface-700 bg-surface-200 p-1 rounded-sm items-center justify-center flex-row\"\r\n      @click=\"copy(typeof content === 'string' ? content : JSON.stringify(content))\"\r\n    >\r\n      <span v-if=\"copied\" class=\"text-sm\">Copied!</span>\r\n      <i-mdi-check-circle v-if=\"isSupported && copied\" />\r\n      <i-mdi-content-copy v-if=\"!copied && isSupported && isValid\" />\r\n    </div>\r\n    <pre\r\n      class=\"text-start border rounded-sm border-surface-500 p-2 m-0 bg-surface-50 dark:bg-surface-900 overflow-auto\"\r\n    ><code>{{ content }}</code></pre>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { PairlistParameter } from '@/types';\r\nimport { PairlistParamType } from '@/types';\r\n\r\ndefineProps<{\r\n  param: PairlistParameter;\r\n}>();\r\n\r\n// TODO: type should really be PairlistParamValue\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst paramValue = defineModel<any>();\r\n</script>\r\n\r\n<template>\r\n  <div class=\"pb-1 flex flex-row text-start\">\r\n    <label class=\"w-2/5\"> {{ param.description }}</label>\r\n    <div class=\"flex flex-col w-full\">\r\n      <InputText\r\n        v-if=\"param.type === PairlistParamType.string || param.type === PairlistParamType.number\"\r\n        v-model=\"paramValue\"\r\n        size=\"small\"\r\n      ></InputText>\r\n\r\n      <BaseCheckbox\r\n        v-if=\"param.type === PairlistParamType.boolean\"\r\n        v-model=\"paramValue\"\r\n      ></BaseCheckbox>\r\n\r\n      <BFormSelect\r\n        v-if=\"param.type === PairlistParamType.option\"\r\n        v-model=\"paramValue\"\r\n        :options=\"param.options\"\r\n      ></BFormSelect>\r\n      <BaseStringList\r\n        v-if=\"param.type === PairlistParamType.list\"\r\n        v-model=\"paramValue\"\r\n      ></BaseStringList>\r\n      <span class=\"text-muted text-sm text-surface-500\">{{ param.help }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n","import { useBotStore } from './ftbotwrapper';\r\n\r\nimport type {\r\n  ExchangeSelection,\r\n  Pairlist,\r\n  PairlistConfig,\r\n  PairlistParamValue,\r\n  PairlistPayloadItem,\r\n  PairlistsPayload,\r\n} from '@/types';\r\nimport { MarginMode, PairlistParamType, TradingMode } from '@/types';\r\n\r\nexport const usePairlistConfigStore = defineStore(\r\n  'pairlistConfig',\r\n  () => {\r\n    const botStore = useBotStore();\r\n\r\n    const evaluating = ref<boolean>(false);\r\n    const intervalId = ref<number>();\r\n    const stakeCurrency = ref<string>(botStore.activeBot?.stakeCurrency ?? 'USDT');\r\n    const whitelist = ref<string[]>([]);\r\n    const customExchange = ref<boolean>(false);\r\n    const selectedExchange = ref<ExchangeSelection>({\r\n      exchange: botStore.activeBot?.botState.exchange ?? '',\r\n      trade_mode: {\r\n        trading_mode: botStore.activeBot?.botState.trading_mode ?? TradingMode.SPOT,\r\n        margin_mode:\r\n          botStore.activeBot?.botState.trading_mode === TradingMode.FUTURES\r\n            ? MarginMode.ISOLATED\r\n            : MarginMode.NONE,\r\n      },\r\n    });\r\n\r\n    const config = ref<PairlistConfig>(makeConfig());\r\n    const savedConfigs = ref<PairlistConfig[]>([]);\r\n    const configName = ref<string>('');\r\n\r\n    const firstPairlistIsGenerator = computed<boolean>(() => {\r\n      // First pairlist must be a generator\r\n      if (config.value.pairlists[0]?.is_pairlist_generator) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    const pairlistValid = computed<boolean>(() => {\r\n      return firstPairlistIsGenerator.value && config.value.pairlists.length > 0;\r\n    });\r\n\r\n    const configJSON = computed(() => {\r\n      return JSON.stringify(configToPayloadItems(), null, 2);\r\n    });\r\n\r\n    const isSavedConfig = (name: string) =>\r\n      savedConfigs.value.findIndex((c) => c.name === name) > -1;\r\n\r\n    function addToConfig(pairlist: Pairlist, index: number) {\r\n      pairlist = structuredClone(toRaw(pairlist));\r\n      pairlist.showParameters = false;\r\n      if (!pairlist.id) {\r\n        pairlist.id = Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n      }\r\n      for (const param in pairlist.params) {\r\n        pairlist.params[param].value = isNotUndefined(pairlist.params[param].default)\r\n          ? pairlist.params[param].default\r\n          : '';\r\n      }\r\n      config.value.pairlists.splice(index, 0, pairlist);\r\n    }\r\n\r\n    function removeFromConfig(index: number) {\r\n      config.value.pairlists.splice(index, 1);\r\n    }\r\n\r\n    function saveConfig(name = '') {\r\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\r\n      config.value.name = name;\r\n\r\n      if (i > -1) {\r\n        savedConfigs.value[i] = structuredClone(toRaw(config.value));\r\n      } else {\r\n        savedConfigs.value.push(structuredClone(toRaw(config.value)));\r\n      }\r\n    }\r\n\r\n    function newConfig(name: string) {\r\n      const c = makeConfig({ name });\r\n      savedConfigs.value.push(c);\r\n      config.value = structuredClone(c);\r\n    }\r\n\r\n    function duplicateConfig(name = '') {\r\n      const c = makeConfig({\r\n        name,\r\n        pairlists: toRaw(config.value.pairlists) as [],\r\n        blacklist: toRaw(config.value.blacklist) as [],\r\n      });\r\n      savedConfigs.value.push(c);\r\n      config.value = structuredClone(c);\r\n    }\r\n\r\n    function deleteConfig() {\r\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\r\n      if (i > -1) {\r\n        savedConfigs.value.splice(i, 1);\r\n        selectOrCreateConfig(\r\n          savedConfigs.value.length > 0 ? savedConfigs.value[0].name : 'default',\r\n        );\r\n      }\r\n    }\r\n\r\n    function selectOrCreateConfig(name: string) {\r\n      const c = savedConfigs.value.find((c) => name === c.name);\r\n      if (c) {\r\n        config.value = structuredClone(toRaw(c));\r\n      } else {\r\n        newConfig(name);\r\n      }\r\n    }\r\n\r\n    function makeConfig({ name = '', pairlists = [], blacklist = [] } = {}): PairlistConfig {\r\n      return { name, pairlists, blacklist };\r\n    }\r\n\r\n    function addToBlacklist() {\r\n      config.value.blacklist.push('');\r\n    }\r\n\r\n    function removeFromBlacklist(index: number) {\r\n      config.value.blacklist.splice(index, 1);\r\n    }\r\n\r\n    function duplicateBlacklist(configName: string) {\r\n      const conf = savedConfigs.value.find((c) => c.name === configName);\r\n      if (conf) {\r\n        config.value.blacklist = structuredClone(toRaw(conf.blacklist));\r\n      }\r\n    }\r\n\r\n    async function startPairlistEvaluation() {\r\n      const payload: PairlistsPayload = configToPayload();\r\n\r\n      evaluating.value = true;\r\n      try {\r\n        const { job_id: jobId } = await botStore.activeBot.evaluatePairlist(payload);\r\n        console.log('jobId', jobId);\r\n\r\n        intervalId.value = window.setInterval(async () => {\r\n          const res = await botStore.activeBot.getBackgroundJobStatus(jobId);\r\n          if (!res.running) {\r\n            clearInterval(intervalId.value);\r\n            const wl = await botStore.activeBot.getPairlistEvalResult(jobId);\r\n            evaluating.value = false;\r\n            if (wl.status === 'success') {\r\n              whitelist.value = wl.result.whitelist;\r\n            } else if (wl.error) {\r\n              showAlert(wl.error, 'error');\r\n              evaluating.value = false;\r\n            }\r\n          }\r\n        }, 1000);\r\n      } catch (error) {\r\n        showAlert('Evaluation failed', 'error');\r\n        evaluating.value = false;\r\n      }\r\n    }\r\n\r\n    function convertToParamType(type: PairlistParamType, value: PairlistParamValue) {\r\n      if (type === PairlistParamType.number) {\r\n        return Number(value);\r\n      } else if (type === PairlistParamType.boolean) {\r\n        return Boolean(value);\r\n      } else if (type === PairlistParamType.list) {\r\n        return value as string[];\r\n      } else {\r\n        return String(value);\r\n      }\r\n    }\r\n\r\n    function configToPayload(): PairlistsPayload {\r\n      const pairlists: PairlistPayloadItem[] = configToPayloadItems();\r\n      const c: PairlistsPayload = {\r\n        pairlists: pairlists,\r\n        stake_currency: stakeCurrency.value,\r\n        blacklist: config.value.blacklist,\r\n      };\r\n      if (customExchange.value) {\r\n        console.log('setting custom exchange props');\r\n        c.exchange = selectedExchange.value.exchange;\r\n        c.trading_mode = selectedExchange.value.trade_mode.trading_mode;\r\n        c.margin_mode = selectedExchange.value.trade_mode.margin_mode;\r\n      }\r\n      return c;\r\n    }\r\n\r\n    function configToPayloadItems() {\r\n      const pairlists: PairlistPayloadItem[] = [];\r\n      config.value.pairlists.forEach((config) => {\r\n        const pairlist = {\r\n          method: config.name,\r\n        };\r\n        for (const key in config.params) {\r\n          const param = config.params[key];\r\n          if (param.value) {\r\n            pairlist[key] = convertToParamType(param.type, param.value);\r\n          }\r\n        }\r\n        pairlists.push(pairlist);\r\n      });\r\n\r\n      return pairlists;\r\n    }\r\n\r\n    watch(\r\n      () => config.value,\r\n      () => {\r\n        configName.value = config.value.name;\r\n      },\r\n      {\r\n        deep: true,\r\n      },\r\n    );\r\n\r\n    return {\r\n      evaluating,\r\n      whitelist,\r\n      config,\r\n      configJSON,\r\n      savedConfigs,\r\n      configName,\r\n      startPairlistEvaluation,\r\n      addToConfig,\r\n      removeFromConfig,\r\n      saveConfig,\r\n      duplicateConfig,\r\n      deleteConfig,\r\n      newConfig,\r\n      selectOrCreateConfig,\r\n      addToBlacklist,\r\n      removeFromBlacklist,\r\n      duplicateBlacklist,\r\n      isSavedConfig,\r\n      firstPairlistIsGenerator,\r\n      pairlistValid,\r\n      stakeCurrency,\r\n      customExchange,\r\n      selectedExchange,\r\n    };\r\n  },\r\n  {\r\n    persist: {\r\n      key: 'ftPairlistConfig',\r\n      pick: ['savedConfigs', 'configName'],\r\n    },\r\n  },\r\n);\r\n\r\nif (import.meta.hot) {\r\n  import.meta.hot.accept(acceptHMRUpdate(usePairlistConfigStore, import.meta.hot));\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nimport type { Pairlist } from '@/types';\r\n\r\nconst pairlistStore = usePairlistConfigStore();\r\n\r\ndefineProps<{\r\n  index: number;\r\n}>();\r\n\r\nconst pairlist = defineModel<Pairlist>({ required: true });\r\n\r\nconst hasParameters = computed(() => Object.keys(pairlist.value.params).length > 0);\r\n\r\nfunction toggleVisible() {\r\n  if (hasParameters.value) {\r\n    pairlist.value.showParameters = !pairlist.value.showParameters;\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"shadow-sm rounded-sm border border-surface-300 dark:border-surface-700\">\r\n    <div\r\n      class=\"flex w-full text-start items-center bg-surface-200 dark:bg-surface-700 p-2 border-b border-surface-300 dark:border-surface-600\"\r\n    >\r\n      <div class=\"flex grow items-center\">\r\n        <i-mdi-reorder-horizontal\r\n          role=\"button\"\r\n          class=\"handle me-2 ms-2 shrink\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n        />\r\n        <div\r\n          role=\"button\"\r\n          class=\"flex grow items-start flex-col user-select-none\"\r\n          @click=\"toggleVisible\"\r\n        >\r\n          <span class=\"font-bold\">{{ pairlist.name }}</span>\r\n          <span class=\"text-sm\">{{ pairlist.description }}</span>\r\n        </div>\r\n      </div>\r\n      <i-mdi-close\r\n        role=\"button\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        class=\"mx-2\"\r\n        @click=\"pairlistStore.removeFromConfig(index)\"\r\n      />\r\n      <i-mdi-chevron-down\r\n        v-if=\"!pairlist.showParameters\"\r\n        :class=\"hasParameters && !pairlist.showParameters ? 'visible' : 'invisible'\"\r\n        role=\"button\"\r\n        class=\"fs-4\"\r\n        @click=\"toggleVisible\"\r\n      />\r\n      <i-mdi-chevron-up\r\n        v-if=\"pairlist.showParameters\"\r\n        :class=\"hasParameters && pairlist.showParameters ? 'visible' : 'invisible'\"\r\n        role=\"button\"\r\n        class=\"fs-4\"\r\n        @click=\"toggleVisible\"\r\n      />\r\n    </div>\r\n    <Transition>\r\n      <div v-if=\"pairlist.showParameters\" class=\"p-2\">\r\n        <PairlistConfigParameter\r\n          v-for=\"(parameter, key) in pairlist.params\"\r\n          :key=\"key\"\r\n          v-model=\"pairlist.params[key].value\"\r\n          :param=\"parameter\"\r\n        />\r\n      </div>\r\n    </Transition>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nconst pairlistStore = usePairlistConfigStore();\r\nconst copyFromConfig = ref('');\r\n\r\nconst configNames = computed(() =>\r\n  pairlistStore.savedConfigs.filter((c) => c.name !== pairlistStore.config.name).map((c) => c.name),\r\n);\r\n</script>\r\n<template>\r\n  <Panel toggleable header=\"Blacklist\" collapsed>\r\n    <div class=\"flex mb-4 items-center gap-2\">\r\n      <span class=\"col-auto\">Copy from:</span>\r\n      <Select v-model=\"copyFromConfig\" size=\"small\" class=\"grow\" :options=\"configNames\" />\r\n      <Button\r\n        title=\"Copy\"\r\n        size=\"small\"\r\n        severity=\"secondary\"\r\n        @click=\"pairlistStore.duplicateBlacklist(copyFromConfig)\"\r\n      >\r\n        <template #icon>\r\n          <i-mdi-content-copy />\r\n        </template>\r\n      </Button>\r\n    </div>\r\n    <InputGroup v-for=\"(item, i) in pairlistStore.config.blacklist\" :key=\"i\" class=\"mb-2\" size=\"sm\">\r\n      <InputText v-model=\"pairlistStore.config.blacklist[i]\" size=\"small\" />\r\n      <InputGroupAddon>\r\n        <Button size=\"small\" severity=\"secondary\" @click=\"pairlistStore.removeFromBlacklist(i)\">\r\n          <template #icon>\r\n            <i-mdi-close />\r\n          </template>\r\n        </Button>\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n    <Button size=\"small\" @click=\"pairlistStore.addToBlacklist()\">Add</Button>\r\n  </Panel>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nimport EditValue from '../general/EditValue.vue';\r\nconst pairlistStore = usePairlistConfigStore();\r\n</script>\r\n<template>\r\n  <div class=\"flex flex-col sm:flex-row mb-2 gap-2\">\r\n    <Button\r\n      title=\"Save configuration\"\r\n      size=\"small\"\r\n      severity=\"primary\"\r\n      @click=\"pairlistStore.saveConfig(pairlistStore.config.name)\"\r\n    >\r\n      <i-mdi-content-save />\r\n    </Button>\r\n    <EditValue\r\n      v-model=\"pairlistStore.config.name\"\r\n      editable-name=\"config\"\r\n      :allow-add=\"true\"\r\n      :allow-duplicate=\"true\"\r\n      :allow-edit=\"true\"\r\n      class=\"flex grow\"\r\n      @delete=\"pairlistStore.deleteConfig\"\r\n      @duplicate=\"(oldName: string, newName: string) => pairlistStore.duplicateConfig(newName)\"\r\n      @new=\"(name: string) => pairlistStore.newConfig(name)\"\r\n      @rename=\"(oldName: string, newName: string) => pairlistStore.saveConfig(newName)\"\r\n    >\r\n      <Select\r\n        v-model=\"pairlistStore.configName\"\r\n        size=\"small\"\r\n        class=\"w-full text-start\"\r\n        :options=\"pairlistStore.savedConfigs.map((c) => c.name)\"\r\n        @update:model-value=\"(config) => pairlistStore.selectOrCreateConfig(config as string)\"\r\n      />\r\n    </EditValue>\r\n    <Button\r\n      title=\"Evaluate pairlist\"\r\n      :disabled=\"pairlistStore.evaluating || !pairlistStore.pairlistValid\"\r\n      severity=\"primary\"\r\n      class=\"px-5\"\r\n      size=\"small\"\r\n      @click=\"pairlistStore.startPairlistEvaluation()\"\r\n    >\r\n      <ProgressSpinner v-if=\"pairlistStore.evaluating\" class=\"h-5 w-5\"></ProgressSpinner>\r\n      <span v-else>Evaluate</span>\r\n    </Button>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { Pairlist } from '@/types';\r\nimport { useSortable, moveArrayElement } from '@vueuse/integrations/useSortable';\r\n\r\nconst botStore = useBotStore();\r\nconst pairlistStore = usePairlistConfigStore();\r\n\r\nconst availablePairlists = ref<Pairlist[]>([]);\r\nconst pairlistConfigsEl = ref<HTMLElement | null>(null);\r\nconst availablePairlistsEl = ref<HTMLElement | null>(null);\r\nconst selectedView = ref<'Config' | 'Results'>('Config');\r\n\r\nconst configEmpty = computed(() => {\r\n  return pairlistStore.config.pairlists.length == 0;\r\n});\r\n\r\nuseSortable(availablePairlistsEl, availablePairlists.value, {\r\n  group: {\r\n    name: 'configurator',\r\n    pull: 'clone',\r\n    put: false,\r\n  },\r\n  sort: false,\r\n  filter: '.no-drag',\r\n  dragClass: 'dragging',\r\n});\r\n\r\nuseSortable(pairlistConfigsEl, pairlistStore.config.pairlists, {\r\n  handle: '.handle',\r\n  group: 'configurator',\r\n  onUpdate: async (e) => {\r\n    moveArrayElement(pairlistStore.config.pairlists, e.oldIndex, e.newIndex);\r\n  },\r\n  onAdd: (e) => {\r\n    const pairlist = availablePairlists.value[e.oldIndex];\r\n    pairlistStore.addToConfig(pairlist, e.newIndex);\r\n    // quick fix from: https://github.com/SortableJS/Sortable/issues/1515\r\n    e.clone.replaceWith(e.item);\r\n    e.clone.remove();\r\n  },\r\n});\r\n\r\nonMounted(async () => {\r\n  availablePairlists.value = (await botStore.activeBot.getPairlists()).pairlists.sort((a, b) =>\r\n    // Sort by is_pairlist_generator (by name), then by name.\r\n    // TODO: this might need to be improved\r\n    a.is_pairlist_generator === b.is_pairlist_generator\r\n      ? a.name.localeCompare(b.name)\r\n      : a.is_pairlist_generator\r\n        ? -1\r\n        : 1,\r\n  );\r\n  pairlistStore.selectOrCreateConfig(\r\n    pairlistStore.isSavedConfig(pairlistStore.configName) ? pairlistStore.configName : 'default',\r\n  );\r\n});\r\n\r\nwatch(\r\n  () => pairlistStore.whitelist,\r\n  () => {\r\n    selectedView.value = 'Results';\r\n  },\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex px-3 mb-3 gap-3 flex-col lg:flex-row\">\r\n    <ul\r\n      ref=\"availablePairlistsEl\"\r\n      class=\"divide-y border-x border-surface-500 rounded-sm border-y divide-solid divide-surface-500\"\r\n    >\r\n      <li\r\n        v-for=\"pairlist in availablePairlists\"\r\n        :key=\"pairlist.name\"\r\n        :class=\"{\r\n          'no-drag text-gray-500 hover:cursor-default':\r\n            pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator,\r\n        }\"\r\n        class=\"pairlist flex text-start items-center py-2 px-3 hover:cursor-grab\"\r\n      >\r\n        <div class=\"flex grow items-start flex-col\">\r\n          <span class=\"font-bold\">{{ pairlist.name }}</span>\r\n          <span class=\"text-sm text-muted-color\">{{ pairlist.description }}</span>\r\n        </div>\r\n        <Button\r\n          severity=\"secondary\"\r\n          class=\"dark:text-white\"\r\n          variant=\"text\"\r\n          :disabled=\"pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator\"\r\n          @click=\"pairlistStore.addToConfig(pairlist, pairlistStore.config.pairlists.length)\"\r\n        >\r\n          <template #icon>\r\n            <i-mdi-arrow-right-bold-box-outline />\r\n          </template>\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n    <div class=\"flex flex-col grow\">\r\n      <PairlistConfigActions />\r\n      <div class=\"border rounded-sm border-surface-500 p-2 mb-2\">\r\n        <div class=\"flex items-center gap-2 my-2\">\r\n          <span class=\"col-auto\">Stake currency: </span>\r\n          <InputText v-model=\"pairlistStore.stakeCurrency\" size=\"small\" />\r\n        </div>\r\n\r\n        <div class=\"mb-2 border rounded-sm border-surface-500 p-2 text-start\">\r\n          <BaseCheckbox v-model=\"pairlistStore.customExchange\" class=\"mb-2\">\r\n            Custom Exchange\r\n          </BaseCheckbox>\r\n          <Transition name=\"fade\">\r\n            <ExchangeSelect\r\n              v-if=\"pairlistStore.customExchange\"\r\n              v-model=\"pairlistStore.selectedExchange\"\r\n            />\r\n          </Transition>\r\n        </div>\r\n      </div>\r\n      <PairlistConfigBlacklist />\r\n      <Message\r\n        v-if=\"pairlistStore.config.pairlists.length > 0 && !pairlistStore.firstPairlistIsGenerator\"\r\n        class=\"my-2\"\r\n        severity=\"warn\"\r\n      >\r\n        First entry in the pairlist must be a Generating pairlist, like StaticPairList or\r\n        VolumePairList.\r\n      </Message>\r\n      <div\r\n        ref=\"pairlistConfigsEl\"\r\n        class=\"flex flex-col grow relative border rounded-sm border-surface-500 p-1 gap-2\"\r\n        :class=\"{ empty: configEmpty }\"\r\n      >\r\n        <PairlistConfigItem\r\n          v-for=\"(pairlist, i) in pairlistStore.config.pairlists\"\r\n          :key=\"pairlist.id\"\r\n          v-model=\"pairlistStore.config.pairlists[i]\"\r\n          :index=\"i\"\r\n          @remove=\"pairlistStore.removeFromConfig\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"flex flex-col w-full lg:w-3/12\">\r\n      <SelectButton\r\n        v-model=\"selectedView\"\r\n        class=\"mb-2\"\r\n        size=\"small\"\r\n        :allow-empty=\"false\"\r\n        option-label=\"value\"\r\n        option-value=\"value\"\r\n        :options=\"[\r\n          { value: 'Config' },\r\n          { value: 'Results', disabled: pairlistStore.whitelist.length === 0 },\r\n        ]\"\r\n        option-disabled=\"disabled\"\r\n      >\r\n        <!-- TODO primevue: Fix selectButton \"disabled\" state-->\r\n      </SelectButton>\r\n      <div class=\"relative overflow-auto\">\r\n        <CopyableTextfield\r\n          v-if=\"selectedView === 'Config'\"\r\n          class=\"lg:a22bsolute w-full\"\r\n          :content=\"pairlistStore.configJSON\"\r\n          :is-valid=\"pairlistStore.pairlistValid\"\r\n        />\r\n        <CopyableTextfield\r\n          v-if=\"selectedView === 'Results'\"\r\n          class=\"lg:abs22olute w-full\"\r\n          :content=\"pairlistStore.whitelist\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"css\" scoped>\r\n@reference '../../styles/tailwind.css';\r\n\r\n.pairlist.dragging {\r\n  @apply border-white border bg-white dark:bg-black;\r\n  /* border: 1px solid white; */\r\n  /* border-radius: 0; */\r\n}\r\n\r\n.empty:after {\r\n  content: 'Drag pairlist here';\r\n  position: absolute;\r\n  align-self: center;\r\n  font-size: 1.1rem;\r\n  text-transform: uppercase;\r\n  line-height: 0;\r\n  top: 50%;\r\n}\r\n</style>\r\n"],"names":["PairlistParamType","copy","isSupported","copied","useClipboard","paramValue","_useModel","__props","usePairlistConfigStore","defineStore","botStore","useBotStore","evaluating","ref","intervalId","stakeCurrency","_a","whitelist","customExchange","selectedExchange","_b","_c","TradingMode","_d","MarginMode","config","makeConfig","savedConfigs","configName","firstPairlistIsGenerator","computed","pairlistValid","configJSON","configToPayloadItems","isSavedConfig","name","c","addToConfig","pairlist","index","toRaw","param","isNotUndefined","removeFromConfig","saveConfig","i","newConfig","duplicateConfig","deleteConfig","selectOrCreateConfig","pairlists","blacklist","addToBlacklist","removeFromBlacklist","duplicateBlacklist","conf","startPairlistEvaluation","payload","configToPayload","jobId","wl","showAlert","convertToParamType","type","value","key","watch","pairlistStore","hasParameters","toggleVisible","copyFromConfig","configNames","availablePairlists","pairlistConfigsEl","availablePairlistsEl","selectedView","configEmpty","useSortable","e","moveArrayElement","onMounted","a","b"],"mappings":"20BA2BY,IAAAA,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,KAAO,OALGA,IAAAA,GAAA,CAAA,CAAA,iUCnBZ,KAAM,CAAE,KAAAC,EAAM,YAAAC,EAAa,OAAAC,CAAA,EAAWC,GAAa,izBCE7C,MAAAC,EAAaC,GAAiBC,EAAA,YAAA,mzBCEvBC,EAAyBC,GACpC,iBACA,IAAM,cACJ,MAAMC,EAAWC,GAAY,EAEvBC,EAAaC,EAAa,EAAK,EAC/BC,EAAaD,EAAY,EACzBE,EAAgBF,IAAYG,EAAAN,EAAS,YAAT,YAAAM,EAAoB,gBAAiB,MAAM,EACvEC,EAAYJ,EAAc,EAAE,EAC5BK,EAAiBL,EAAa,EAAK,EACnCM,EAAmBN,EAAuB,CAC9C,WAAUO,EAAAV,EAAS,YAAT,YAAAU,EAAoB,SAAS,WAAY,GACnD,WAAY,CACV,eAAcC,EAAAX,EAAS,YAAT,YAAAW,EAAoB,SAAS,eAAgBC,GAAY,KACvE,cACEC,GAAAb,EAAS,YAAT,YAAAa,GAAoB,SAAS,gBAAiBD,GAAY,QACtDE,GAAW,SACXA,GAAW,IAAA,CACnB,CACD,EAEKC,EAASZ,EAAoBa,GAAY,EACzCC,EAAed,EAAsB,EAAE,EACvCe,EAAaf,EAAY,EAAE,EAE3BgB,EAA2BC,EAAkB,IAAM,OAEvD,MAAI,IAAAd,EAAAS,EAAO,MAAM,UAAU,CAAC,IAAxB,MAAAT,EAA2B,sBAGxB,CACR,EAEKe,EAAgBD,EAAkB,IAC/BD,EAAyB,OAASJ,EAAO,MAAM,UAAU,OAAS,CAC1E,EAEKO,EAAaF,EAAS,IACnB,KAAK,UAAUG,EAAqB,EAAG,KAAM,CAAC,CACtD,EAEKC,EAAiBC,GACrBR,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASD,CAAI,EAAI,GAEhD,SAAAE,EAAYC,EAAoBC,EAAe,CAC3CD,EAAA,gBAAgBE,EAAMF,CAAQ,CAAC,EAC1CA,EAAS,eAAiB,GACrBA,EAAS,KACZA,EAAS,GAAK,KAAK,IAAI,EAAE,SAAS,EAAE,EAAI,KAAK,OAAS,EAAA,SAAS,EAAE,EAAE,UAAU,CAAC,GAErE,UAAAG,KAASH,EAAS,OAC3BA,EAAS,OAAOG,CAAK,EAAE,MAAQC,GAAeJ,EAAS,OAAOG,CAAK,EAAE,OAAO,EACxEH,EAAS,OAAOG,CAAK,EAAE,QACvB,GAENhB,EAAO,MAAM,UAAU,OAAOc,EAAO,EAAGD,CAAQ,CAAA,CAGlD,SAASK,EAAiBJ,EAAe,CACvCd,EAAO,MAAM,UAAU,OAAOc,EAAO,CAAC,CAAA,CAG/B,SAAAK,EAAWT,EAAO,GAAI,CACvB,MAAAU,EAAIlB,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASX,EAAO,MAAM,IAAI,EAC1EA,EAAO,MAAM,KAAOU,EAEhBU,EAAI,GACNlB,EAAa,MAAMkB,CAAC,EAAI,gBAAgBL,EAAMf,EAAO,KAAK,CAAC,EAE3DE,EAAa,MAAM,KAAK,gBAAgBa,EAAMf,EAAO,KAAK,CAAC,CAAC,CAC9D,CAGF,SAASqB,EAAUX,EAAc,CAC/B,MAAMC,EAAIV,EAAW,CAAE,KAAAS,EAAM,EAChBR,EAAA,MAAM,KAAKS,CAAC,EAClBX,EAAA,MAAQ,gBAAgBW,CAAC,CAAA,CAGzB,SAAAW,EAAgBZ,EAAO,GAAI,CAClC,MAAMC,EAAIV,EAAW,CACnB,KAAAS,EACA,UAAWK,EAAMf,EAAO,MAAM,SAAS,EACvC,UAAWe,EAAMf,EAAO,MAAM,SAAS,CAAA,CACxC,EACYE,EAAA,MAAM,KAAKS,CAAC,EAClBX,EAAA,MAAQ,gBAAgBW,CAAC,CAAA,CAGlC,SAASY,GAAe,CAChB,MAAAH,EAAIlB,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASX,EAAO,MAAM,IAAI,EACtEoB,EAAI,KACOlB,EAAA,MAAM,OAAOkB,EAAG,CAAC,EAC9BI,EACEtB,EAAa,MAAM,OAAS,EAAIA,EAAa,MAAM,CAAC,EAAE,KAAO,SAC/D,EACF,CAGF,SAASsB,EAAqBd,EAAc,CACpC,MAAAC,EAAIT,EAAa,MAAM,KAAMS,GAAMD,IAASC,EAAE,IAAI,EACpDA,EACFX,EAAO,MAAQ,gBAAgBe,EAAMJ,CAAC,CAAC,EAEvCU,EAAUX,CAAI,CAChB,CAGF,SAAST,EAAW,CAAE,KAAAS,EAAO,GAAI,UAAAe,EAAY,CAAA,EAAI,UAAAC,EAAY,EAAO,EAAA,GAAoB,CAC/E,MAAA,CAAE,KAAAhB,EAAM,UAAAe,EAAW,UAAAC,CAAU,CAAA,CAGtC,SAASC,GAAiB,CACjB3B,EAAA,MAAM,UAAU,KAAK,EAAE,CAAA,CAGhC,SAAS4B,EAAoBd,EAAe,CAC1Cd,EAAO,MAAM,UAAU,OAAOc,EAAO,CAAC,CAAA,CAGxC,SAASe,GAAmB1B,EAAoB,CACxC,MAAA2B,EAAO5B,EAAa,MAAM,KAAMS,GAAMA,EAAE,OAASR,CAAU,EAC7D2B,IACF9B,EAAO,MAAM,UAAY,gBAAgBe,EAAMe,EAAK,SAAS,CAAC,EAChE,CAGF,eAAeC,IAA0B,CACvC,MAAMC,EAA4BC,GAAgB,EAElD9C,EAAW,MAAQ,GACf,GAAA,CACI,KAAA,CAAE,OAAQ+C,CAAM,EAAI,MAAMjD,EAAS,UAAU,iBAAiB+C,CAAO,EACnE,QAAA,IAAI,QAASE,CAAK,EAEf7C,EAAA,MAAQ,OAAO,YAAY,SAAY,CAE5C,GAAA,EADQ,MAAMJ,EAAS,UAAU,uBAAuBiD,CAAK,GACxD,QAAS,CAChB,cAAc7C,EAAW,KAAK,EAC9B,MAAM8C,EAAK,MAAMlD,EAAS,UAAU,sBAAsBiD,CAAK,EAC/D/C,EAAW,MAAQ,GACfgD,EAAG,SAAW,UACN3C,EAAA,MAAQ2C,EAAG,OAAO,UACnBA,EAAG,QACFC,GAAAD,EAAG,MAAO,OAAO,EAC3BhD,EAAW,MAAQ,GACrB,GAED,GAAI,OACO,CACdiD,GAAU,oBAAqB,OAAO,EACtCjD,EAAW,MAAQ,EAAA,CACrB,CAGO,SAAAkD,GAAmBC,EAAyBC,EAA2B,CAC1E,OAAAD,IAAS/D,EAAkB,OACtB,OAAOgE,CAAK,EACVD,IAAS/D,EAAkB,QAC7B,EAAQgE,EACND,IAAS/D,EAAkB,KAC7BgE,EAEA,OAAOA,CAAK,CACrB,CAGF,SAASN,IAAoC,CAE3C,MAAMtB,EAAsB,CAC1B,UAFuCH,EAAqB,EAG5D,eAAgBlB,EAAc,MAC9B,UAAWU,EAAO,MAAM,SAC1B,EACA,OAAIP,EAAe,QACjB,QAAQ,IAAI,+BAA+B,EACzCkB,EAAA,SAAWjB,EAAiB,MAAM,SAClCiB,EAAA,aAAejB,EAAiB,MAAM,WAAW,aACjDiB,EAAA,YAAcjB,EAAiB,MAAM,WAAW,aAE7CiB,CAAA,CAGT,SAASH,GAAuB,CAC9B,MAAMiB,EAAmC,CAAC,EAC1C,OAAAzB,EAAO,MAAM,UAAU,QAASA,GAAW,CACzC,MAAMa,EAAW,CACf,OAAQb,EAAO,IACjB,EACW,UAAAwC,KAAOxC,EAAO,OAAQ,CACzB,MAAAgB,EAAQhB,EAAO,OAAOwC,CAAG,EAC3BxB,EAAM,QACRH,EAAS2B,CAAG,EAAIH,GAAmBrB,EAAM,KAAMA,EAAM,KAAK,EAC5D,CAEFS,EAAU,KAAKZ,CAAQ,CAAA,CACxB,EAEMY,CAAA,CAGT,OAAAgB,GACE,IAAMzC,EAAO,MACb,IAAM,CACOG,EAAA,MAAQH,EAAO,MAAM,IAClC,EACA,CACE,KAAM,EAAA,CAEV,EAEO,CACL,WAAAb,EACA,UAAAK,EACA,OAAAQ,EACA,WAAAO,EACA,aAAAL,EACA,WAAAC,EACA,wBAAA4B,GACA,YAAAnB,EACA,iBAAAM,EACA,WAAAC,EACA,gBAAAG,EACA,aAAAC,EACA,UAAAF,EACA,qBAAAG,EACA,eAAAG,EACA,oBAAAC,EACA,mBAAAC,GACA,cAAApB,EACA,yBAAAL,EACA,cAAAE,EACA,cAAAhB,EACA,eAAAG,EACA,iBAAAC,CACF,CACF,EACA,CACE,QAAS,CACP,IAAK,mBACL,KAAM,CAAC,eAAgB,YAAY,CAAA,CACrC,CAEJ,kdC3PA,MAAMgD,EAAgB3D,EAAuB,EAMvC8B,EAAWhC,GAAqBC,EAAA,YAAmB,EAEnD6D,EAAgBtC,EAAS,IAAM,OAAO,KAAKQ,EAAS,MAAM,MAAM,EAAE,OAAS,CAAC,EAElF,SAAS+B,GAAgB,CACnBD,EAAc,QAChB9B,EAAS,MAAM,eAAiB,CAACA,EAAS,MAAM,eAClD,4oCCfF,MAAM6B,EAAgB3D,EAAuB,EACvC8D,EAAiBzD,EAAI,EAAE,EAEvB0D,EAAczC,EAAS,IAC3BqC,EAAc,aAAa,OAAQ/B,GAAMA,EAAE,OAAS+B,EAAc,OAAO,IAAI,EAAE,IAAK/B,GAAMA,EAAE,IAAI,CAClG,09CCJA,MAAM+B,EAAgB3D,EAAuB,y8DCC7C,MAAME,EAAWC,GAAY,EACvBwD,EAAgB3D,EAAuB,EAEvCgE,EAAqB3D,EAAgB,EAAE,EACvC4D,EAAoB5D,EAAwB,IAAI,EAChD6D,EAAuB7D,EAAwB,IAAI,EACnD8D,EAAe9D,EAA0B,QAAQ,EAEjD+D,EAAc9C,EAAS,IACpBqC,EAAc,OAAO,UAAU,QAAU,CACjD,EAEW,OAAAU,GAAAH,EAAsBF,EAAmB,MAAO,CAC1D,MAAO,CACL,KAAM,eACN,KAAM,QACN,IAAK,EACP,EACA,KAAM,GACN,OAAQ,WACR,UAAW,UAAA,CACZ,EAEWK,GAAAJ,EAAmBN,EAAc,OAAO,UAAW,CAC7D,OAAQ,UACR,MAAO,eACP,SAAU,MAAOW,GAAM,CACrBC,GAAiBZ,EAAc,OAAO,UAAWW,EAAE,SAAUA,EAAE,QAAQ,CACzE,EACA,MAAQA,GAAM,CACZ,MAAMxC,EAAWkC,EAAmB,MAAMM,EAAE,QAAQ,EACtCX,EAAA,YAAY7B,EAAUwC,EAAE,QAAQ,EAE5CA,EAAA,MAAM,YAAYA,EAAE,IAAI,EAC1BA,EAAE,MAAM,OAAO,CAAA,CACjB,CACD,EAEDE,GAAU,SAAY,CACpBR,EAAmB,OAAS,MAAM9D,EAAS,UAAU,aAAA,GAAgB,UAAU,KAAK,CAACuE,EAAGC,IAGtFD,EAAE,wBAA0BC,EAAE,sBAC1BD,EAAE,KAAK,cAAcC,EAAE,IAAI,EAC3BD,EAAE,sBACA,GACA,CACR,EACcd,EAAA,qBACZA,EAAc,cAAcA,EAAc,UAAU,EAAIA,EAAc,WAAa,SACrF,CAAA,CACD,EAEDD,GACE,IAAMC,EAAc,UACpB,IAAM,CACJQ,EAAa,MAAQ,SAAA,CAEzB"}