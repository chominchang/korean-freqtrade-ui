{"version":3,"file":"BotBalance.vue_vue_type_script_setup_true_lang-Dt7lDTA7.js","sources":["../../node_modules/.pnpm/primevue@4.3.3_vue@3.5.13_typescript@5.8.3_/node_modules/primevue/columngroup/style/index.mjs","../../node_modules/.pnpm/primevue@4.3.3_vue@3.5.13_typescript@5.8.3_/node_modules/primevue/columngroup/index.mjs","../../node_modules/.pnpm/primevue@4.3.3_vue@3.5.13_typescript@5.8.3_/node_modules/primevue/row/index.mjs","../../src/components/charts/BalanceChart.vue","../../src/components/ftbot/BotBalance.vue"],"sourcesContent":["import BaseStyle from '@primevue/core/base/style';\n\nvar ColumnGroupStyle = BaseStyle.extend({\n  name: 'columngroup'\n});\n\nexport { ColumnGroupStyle as default };\n//# sourceMappingURL=index.mjs.map\n","import BaseComponent from '@primevue/core/basecomponent';\nimport ColumnGroupStyle from 'primevue/columngroup/style';\n\nvar script$1 = {\n  name: 'BaseColumnGroup',\n  \"extends\": BaseComponent,\n  props: {\n    type: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: ColumnGroupStyle,\n  provide: function provide() {\n    return {\n      $pcColumnGroup: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'ColumnGroup',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: ['$columnGroups'],\n  mounted: function mounted() {\n    var _this$$columnGroups;\n    (_this$$columnGroups = this.$columnGroups) === null || _this$$columnGroups === void 0 || _this$$columnGroups.add(this.$);\n  },\n  unmounted: function unmounted() {\n    var _this$$columnGroups2;\n    (_this$$columnGroups2 = this.$columnGroups) === null || _this$$columnGroups2 === void 0 || _this$$columnGroups2[\"delete\"](this.$);\n  },\n  render: function render() {\n    return null;\n  }\n};\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","import BaseComponent from '@primevue/core/basecomponent';\n\nvar script = {\n  name: 'Row',\n  \"extends\": BaseComponent,\n  inject: ['$rows'],\n  mounted: function mounted() {\n    var _this$$rows;\n    (_this$$rows = this.$rows) === null || _this$$rows === void 0 || _this$$rows.add(this.$);\n  },\n  unmounted: function unmounted() {\n    var _this$$rows2;\n    (_this$$rows2 = this.$rows) === null || _this$$rows2 === void 0 || _this$$rows2[\"delete\"](this.$);\n  },\n  render: function render() {\n    return null;\n  }\n};\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","<script setup lang=\"ts\">\r\nimport type { EChartsOption } from 'echarts';\r\nimport ECharts from 'vue-echarts';\r\n\r\nimport { PieChart } from 'echarts/charts';\r\nimport {\r\n  DatasetComponent,\r\n  LegendComponent,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n} from 'echarts/components';\r\nimport { use } from 'echarts/core';\r\nimport { LabelLayout } from 'echarts/features';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\n\r\nimport { useSettingsStore } from '@/stores/settings';\r\nimport type { BalanceValues } from '@/types';\r\nimport { useElementSize } from '@vueuse/core';\r\n\r\nuse([\r\n  PieChart,\r\n  CanvasRenderer,\r\n  DatasetComponent,\r\n  LegendComponent,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LabelLayout,\r\n]);\r\n\r\nconst balanceChart = ref(null);\r\nconst { width } = useElementSize(balanceChart);\r\n\r\nconst props = defineProps({\r\n  currencies: { required: true, type: Array as () => BalanceValues[] },\r\n  showTitle: { required: false, type: Boolean },\r\n});\r\nconst settingsStore = useSettingsStore();\r\n\r\nconst balanceChartOptions = computed((): EChartsOption => {\r\n  return {\r\n    title: {\r\n      text: 'Balance',\r\n      show: props.showTitle,\r\n    },\r\n    center: ['50%', '50%'],\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    dataset: {\r\n      dimensions: ['balance', 'currency', 'est_stake', 'free', 'used', 'stake'],\r\n      source: props.currencies,\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: (params) => {\r\n        return `${formatPriceCurrency(params.value.balance, params.value.currency, 8)}<br />${\r\n          params.percent\r\n        }% (${formatPriceCurrency(params.value.est_stake, params.value.stake)})`;\r\n      },\r\n    },\r\n    // legend: {\r\n    //   orient: 'vertical',\r\n    //   right: 10,\r\n    //   top: 20,\r\n    //   bottom: 20,\r\n    // },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        radius: ['40%', '70%'],\r\n\r\n        encode: {\r\n          value: 'est_stake',\r\n          itemName: 'currency',\r\n          tooltip: ['balance', 'currency'],\r\n        },\r\n        label: {\r\n          formatter: '{b} - {d}%',\r\n        },\r\n        tooltip: {\r\n          show: true,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n});\r\n</script>\r\n\r\n<template>\r\n  <ECharts\r\n    v-if=\"currencies\"\r\n    ref=\"balanceChart\"\r\n    :option=\"balanceChartOptions\"\r\n    :theme=\"settingsStore.chartTheme\"\r\n    :style=\"{ height: width * 0.6 + 'px' }\"\r\n    autoresize\r\n  />\r\n</template>\r\n\r\n<style lang=\"css\" scoped>\r\n.echarts {\r\n  min-height: 20px;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { useBotStore } from '@/stores/ftbotwrapper';\r\nimport type { BalanceValues } from '@/types';\r\n\r\nconst botStore = useBotStore();\r\nconst hideSmallBalances = ref(true);\r\nconst showBotOnly = ref(true);\r\n\r\nconst smallBalance = computed<number>(() => {\r\n  return Number((1.1 ** botStore.activeBot.stakeCurrencyDecimals).toFixed(8));\r\n});\r\n\r\nconst canUseBotBalance = computed(() => {\r\n  return botStore.activeBot.botApiVersion >= 2.26;\r\n});\r\n\r\nconst balanceCurrencies = computed(() => {\r\n  return botStore.activeBot.balance.currencies?.filter(\r\n    (v) =>\r\n      (!hideSmallBalances.value || v.est_stake >= smallBalance.value) &&\r\n      (!canUseBotBalance.value || !showBotOnly.value || (v.is_bot_managed ?? true) === true),\r\n  );\r\n});\r\n\r\nconst formatCurrency = (value) => {\r\n  return value ? formatPrice(value, botStore.activeBot.stakeCurrencyDecimals) : '';\r\n};\r\n\r\nconst chartValues = computed<BalanceValues[]>(() => {\r\n  return balanceCurrencies.value?.map((v) => {\r\n    return {\r\n      balance:\r\n        showBotOnly.value && canUseBotBalance.value && v.bot_owned != undefined\r\n          ? v.bot_owned\r\n          : v.is_position === true\r\n            ? v.position\r\n            : v.balance,\r\n      currency: v.currency,\r\n      est_stake:\r\n        showBotOnly.value && canUseBotBalance.value\r\n          ? (v.est_stake_bot ?? v.est_stake)\r\n          : v.est_stake,\r\n      free: showBotOnly.value && canUseBotBalance.value ? (v.bot_owned ?? v.free) : v.free,\r\n      used: v.used,\r\n      stake: v.stake,\r\n    };\r\n  });\r\n});\r\n\r\nconst tableFields = computed(() => {\r\n  return [\r\n    { field: 'currency', header: 'Currency' },\r\n    {\r\n      field: showBotOnly.value && canUseBotBalance.value ? 'bot_owned' : 'free',\r\n      header: 'Available',\r\n      asCurrency: true,\r\n    },\r\n    {\r\n      field: showBotOnly.value && canUseBotBalance.value ? 'est_stake_bot' : 'est_stake',\r\n      header: `in ${botStore.activeBot.balance.stake}`,\r\n      asCurrency: true,\r\n    },\r\n  ];\r\n});\r\n\r\nasync function refreshBalance() {\r\n  botStore.activeBot.getBalance();\r\n}\r\n\r\nonMounted(() => {\r\n  refreshBalance();\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"flex flex-wrap flex-row mb-2 justify-end items-center\">\r\n      <label class=\"text-xl ms-1 me-auto mb-0\">{{ showBotOnly ? 'Bot' : 'Account' }} Balance</label>\r\n      <div class=\"flex flex-row gap-1\">\r\n        <Button\r\n          v-if=\"canUseBotBalance\"\r\n          severity=\"secondary\"\r\n          :tooltip=\"!showBotOnly ? 'Showing Account balance' : 'Showing Bot balance'\"\r\n          @click=\"showBotOnly = !showBotOnly\"\r\n        >\r\n          <template #icon>\r\n            <i-mdi-robot v-if=\"showBotOnly\" />\r\n            <i-mdi-bank v-else />\r\n          </template>\r\n        </Button>\r\n        <Button\r\n          severity=\"secondary\"\r\n          :tooltip=\"!hideSmallBalances ? 'Hide small balances' : 'Show all balances'\"\r\n          @click=\"hideSmallBalances = !hideSmallBalances\"\r\n        >\r\n          <template #icon>\r\n            <i-mdi-eye-off v-if=\"hideSmallBalances\" />\r\n            <i-mdi-eye v-else />\r\n          </template>\r\n        </Button>\r\n        <Button severity=\"secondary\" @click=\"refreshBalance\">\r\n          <template #icon>\r\n            <i-mdi-refresh />\r\n          </template>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n    <BalanceChart v-if=\"balanceCurrencies\" :currencies=\"chartValues\" />\r\n    <div>\r\n      <p v-if=\"botStore.activeBot.balance.note\">\r\n        <strong>{{ botStore.activeBot.balance.note }}</strong>\r\n      </p>\r\n      <DataTable :value=\"balanceCurrencies\" footer>\r\n        <Column\r\n          v-for=\"field in tableFields\"\r\n          :key=\"field.field\"\r\n          :field=\"field.field\"\r\n          :header=\"field.header\"\r\n          ><template v-if=\"field.asCurrency\" #body=\"{ data }\">\r\n            {{ formatCurrency(data[field.field]) }}\r\n          </template></Column\r\n        >\r\n        <ColumnGroup type=\"footer\">\r\n          <Row>\r\n            <Column footer=\"Total\" f />\r\n            <Column>\r\n              <template #footer>\r\n                <span\r\n                  class=\"font-italic\"\r\n                  :title=\"`Increase over initial capital of ${formatCurrency(\r\n                    botStore.activeBot.balance.starting_capital,\r\n                  )} ${botStore.activeBot.balance.stake}`\"\r\n                >\r\n                  {{ formatPercent(botStore.activeBot.balance.starting_capital_ratio) }}\r\n                </span>\r\n              </template>\r\n            </Column>\r\n            <Column>\r\n              <template #footer>\r\n                <strong>\r\n                  {{\r\n                    showBotOnly && canUseBotBalance\r\n                      ? formatCurrency(botStore.activeBot.balance.total_bot)\r\n                      : formatCurrency(botStore.activeBot.balance.total)\r\n                  }}\r\n                </strong>\r\n              </template>\r\n            </Column>\r\n          </Row>\r\n        </ColumnGroup>\r\n      </DataTable>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"names":["ColumnGroupStyle","BaseStyle","script$1","BaseComponent","script","_this$$columnGroups","_this$$columnGroups2","_this$$rows","_this$$rows2","use","PieChart","CanvasRenderer","DatasetComponent","LegendComponent","TitleComponent","TooltipComponent","LabelLayout","balanceChart","ref","width","useElementSize","props","__props","settingsStore","useSettingsStore","balanceChartOptions","computed","params","formatPriceCurrency","botStore","useBotStore","hideSmallBalances","showBotOnly","smallBalance","canUseBotBalance","balanceCurrencies","_a","v","formatCurrency","value","formatPrice","chartValues","tableFields","refreshBalance","onMounted"],"mappings":"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","x_google_ignoreList":[0,1,2]}