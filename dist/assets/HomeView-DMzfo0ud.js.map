{"version":3,"file":"HomeView-DMzfo0ud.js","sources":["../../src/components/BotRename.vue","../../src/components/BotList.vue","../../src/views/HomeView.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { useBotStore } from '@/stores/ftbotwrapper';\r\nimport type { BotDescriptor } from '@/types';\r\nconst props = defineProps({\r\n  bot: { type: Object as () => BotDescriptor, required: true },\r\n});\r\nconst emit = defineEmits<{ cancelled: []; saved: [] }>();\r\n\r\nconst botStore = useBotStore();\r\nconst newName = ref<string>('');\r\n\r\nonMounted(() => {\r\n  newName.value = props.bot.botName;\r\n});\r\n\r\nconst save = () => {\r\n  botStore.updateBot(props.bot.botId, {\r\n    botName: newName.value,\r\n  });\r\n\r\n  emit('saved');\r\n};\r\n</script>\r\n\r\n<template>\r\n  <form class=\"flex w-full gap-2\" @submit.prevent=\"save\">\r\n    <InputText v-model=\"newName\" size=\"small\" class=\"w-full\" placeholder=\"봇 이름\" autofocus />\r\n\r\n    <div class=\"flex gap-1\">\r\n      <Button type=\"submit\" size=\"small\" severity=\"secondary\" title=\"저장\" class=\"w-8 h-8 p-0!\">\r\n        <i-mdi-check />\r\n      </Button>\r\n\r\n      <Button\r\n        size=\"small\"\r\n        severity=\"secondary\"\r\n        title=\"취소\"\r\n        class=\"w-8 h-8 p-0!\"\r\n        @click=\"$emit('cancelled')\"\r\n      >\r\n        <i-mdi-close />\r\n      </Button>\r\n    </div>\r\n  </form>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport LoginModal from '@/components/LoginModal.vue';\r\n\r\nimport { useBotStore } from '@/stores/ftbotwrapper';\r\nimport type { AuthStorageWithBotId, BotDescriptor } from '@/types';\r\nimport { useSortable } from '@vueuse/integrations/useSortable';\r\n\r\ndefineProps({\r\n  small: { default: false, type: Boolean },\r\n});\r\n\r\nconst botStore = useBotStore();\r\n\r\nconst editingBots = ref<string[]>([]);\r\nconst loginModal = ref<typeof LoginModal>();\r\nconst sortContainer = ref<HTMLElement | null>(null);\r\nconst botListComp = computed<BotDescriptor[]>(() => {\r\n  //Convert to array\r\n  return botStore.availableBotsSorted;\r\n});\r\n\r\nuseSortable(sortContainer, botListComp, {\r\n  handle: '.handle',\r\n  onUpdate: (e) => {\r\n    const oldBotId = botListComp.value[e.oldIndex].botId;\r\n    const newBotId = botListComp.value[e.newIndex].botId;\r\n    botStore.updateBot(oldBotId, { sortId: e.newIndex });\r\n    botStore.updateBot(newBotId, { sortId: e.oldIndex });\r\n  },\r\n});\r\n\r\nconst editBot = (botId: string) => {\r\n  if (!editingBots.value.includes(botId)) {\r\n    editingBots.value.push(botId);\r\n  }\r\n};\r\n\r\nconst editBotLogin = (botId: string) => {\r\n  const loginInfo: AuthStorageWithBotId = {\r\n    ...botStore.botStores[botId].getLoginInfo(),\r\n    botId,\r\n  };\r\n  loginModal.value?.openLoginModal(loginInfo);\r\n};\r\n\r\nconst stopEditBot = (botId: string) => {\r\n  if (!editingBots.value.includes(botId)) {\r\n    return;\r\n  }\r\n\r\n  editingBots.value.splice(editingBots.value.indexOf(botId), 1);\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"botStore.botCount > 0\">\r\n    <h3 v-if=\"!small\" class=\"font-bold text-2xl mb-2\">사용 가능한 봇</h3>\r\n    <ul\r\n      ref=\"sortContainer\"\r\n      class=\"flex flex-col divide-y border-x border-surface-500 rounded-sm border-y divide-solid divide-surface-500\"\r\n    >\r\n      <li\r\n        v-for=\"bot in botListComp\"\r\n        :key=\"bot.botId\"\r\n        :active=\"bot.botId === botStore.selectedBot\"\r\n        button\r\n        :title=\"`${bot.botId} - ${bot.botName} - ${bot.botUrl} - ${\r\n          botStore.botStores[bot.botId].isBotLoggedIn ? '' : '로그인 정보가 만료되었습니다!'\r\n        }`\"\r\n        class=\"flex items-center p-2\"\r\n        :class=\"{\r\n          'bg-primary-100 dark:bg-primary-800': bot.botId === botStore.selectedBot,\r\n        }\"\r\n        @click=\"botStore.selectBot(bot.botId)\"\r\n      >\r\n        <i-mdi-reorder-horizontal v-if=\"!small\" class=\"handle cursor-pointer me-2 fs-4\" />\r\n        <BotRename\r\n          v-if=\"editingBots.includes(bot.botId)\"\r\n          :bot=\"bot\"\r\n          @saved=\"stopEditBot(bot.botId)\"\r\n          @cancelled=\"stopEditBot(bot.botId)\"\r\n        />\r\n\r\n        <BotEntry\r\n          v-else\r\n          :bot=\"bot\"\r\n          :no-buttons=\"small\"\r\n          @edit=\"editBot(bot.botId)\"\r\n          @edit-login=\"editBotLogin(bot.botId)\"\r\n        />\r\n      </li>\r\n    </ul>\r\n    <LoginModal v-if=\"!small\" ref=\"loginModal\" class=\"mt-2\" login-text=\"새 봇 추가\" />\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\"></script>\r\n\r\n<template>\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center\">\r\n      <BotList />\r\n    </div>\r\n    <Divider />\r\n    <!-- <img alt=\"Freqtrade logo\" src=\"../assets/freqtrade-logo.png\" width=\"450px\" class=\"my-5\" /> -->\r\n    <div title=\"프리퀀트레이드 로고\" class=\"logo-svg my-5 mx-auto dark:bg-white bg-black\" />\r\n    <h1 class=\"font-bold text-4xl mb-4\">프리퀀트레이드 UI에 오신 것을 환영합니다</h1>\r\n    <div>이 페이지에서 거래 봇을 제어할 수 있습니다.</div>\r\n    <Divider />\r\n    <p class=\"mb-2\">\r\n      도움이 필요하시면 다음을 참조하세요:\r\n      <a\r\n        class=\"text-primary underline cursor-pointer\"\r\n        href=\"https://www.freqtrade.io/en/latest/\"\r\n        target=\"_blank\"\r\n        >프리퀀트레이드 문서</a\r\n      >.\r\n    </p>\r\n\r\n    <p>즐거운 시간 되세요 - <i>프리퀀트레이드 팀 드림</i></p>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"css\" scoped>\r\n.logo-svg {\r\n  -webkit-mask: url(../assets/freqtrade-logo-mask.png) no-repeat center;\r\n  -webkit-mask-size: 240px 240px;\r\n  mask: url(../assets/freqtrade-logo-mask.png) no-repeat center;\r\n  mask-size: contain;\r\n  width: 250px;\r\n  height: 250px;\r\n}\r\n</style>\r\n"],"names":["props","__props","emit","__emit","botStore","useBotStore","newName","ref","onMounted","save","editingBots","loginModal","sortContainer","botListComp","computed","useSortable","e","oldBotId","newBotId","editBot","botId","editBotLogin","loginInfo","_a","stopEditBot","_hoisted_1","_openBlock","_createElementBlock","_hoisted_2","_cache","_createElementVNode","_createTextVNode"],"mappings":"6bAGA,MAAMA,EAAQC,EAGRC,EAAOC,EAEPC,EAAWC,EAAY,EACvBC,EAAUC,EAAY,EAAE,EAE9BC,EAAU,IAAM,CACNF,EAAA,MAAQN,EAAM,IAAI,OAAA,CAC3B,EAED,MAAMS,EAAO,IAAM,CACRL,EAAA,UAAUJ,EAAM,IAAI,MAAO,CAClC,QAASM,EAAQ,KAAA,CAClB,EAEDJ,EAAK,OAAO,CACd,ysBCVA,MAAME,EAAWC,EAAY,EAEvBK,EAAcH,EAAc,EAAE,EAC9BI,EAAaJ,EAAuB,EACpCK,EAAgBL,EAAwB,IAAI,EAC5CM,EAAcC,EAA0B,IAErCV,EAAS,mBACjB,EAEDW,EAAYH,EAAeC,EAAa,CACtC,OAAQ,UACR,SAAWG,GAAM,CACf,MAAMC,EAAWJ,EAAY,MAAMG,EAAE,QAAQ,EAAE,MACzCE,EAAWL,EAAY,MAAMG,EAAE,QAAQ,EAAE,MAC/CZ,EAAS,UAAUa,EAAU,CAAE,OAAQD,EAAE,SAAU,EACnDZ,EAAS,UAAUc,EAAU,CAAE,OAAQF,EAAE,SAAU,CAAA,CACrD,CACD,EAEK,MAAAG,EAAWC,GAAkB,CAC5BV,EAAY,MAAM,SAASU,CAAK,GACvBV,EAAA,MAAM,KAAKU,CAAK,CAEhC,EAEMC,EAAgBD,GAAkB,OACtC,MAAME,EAAkC,CACtC,GAAGlB,EAAS,UAAUgB,CAAK,EAAE,aAAa,EAC1C,MAAAA,CACF,GACWG,EAAAZ,EAAA,QAAA,MAAAY,EAAO,eAAeD,EACnC,EAEME,EAAeJ,GAAkB,CAChCV,EAAY,MAAM,SAASU,CAAK,GAIrCV,EAAY,MAAM,OAAOA,EAAY,MAAM,QAAQU,CAAK,EAAG,CAAC,CAC9D,8lCC/CSK,EAAA,CAAA,MAAM,MAAqB,iEAAhC,OAAAC,EAAA,EAEMC,EAAA,MAAAF,EAAA,GADO,MAAAG,EAAA,MAEF,KAEoE,EAA1EC,EAAK,KAAaA,EAAA,CAAA,EAAAC,EAAA,MAAA,CAAC,MAAM,iEAC9B,EAAA,KAAA,EAAA,GACAD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAoC,YAAN,yBAAA,EAAA,0BAAA,EAAA,GAC9BD,EAAW,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,MAAA,KAAA,4BAAA,EAAA,MASP,EArBRD,EAAA,CAAA,IAAAA,EAeM,CAAA,EAAAC,EAAA,IAAA,CAAA,MAAA,QAAA,CAAAC,EAIyB,wBAAA,EAHvBD,EAA6C,IAAA,CAC7C,MAA0C,wCAC1C,KAAM,6CACK,QAnBnB,EAAA,YAAA,gBAAAD,EAAA,CAAA,IAAAA,EAuBoB,CAAA,EAAAC,EAAA,IAAA,KAAA,CAAAC,EAAA,eAAe"}